function Mia
global UserValues MIAData
h.Mia=findobj('Tag','Mia');

if isempty(h.Mia)
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Figure generation %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    %%% Loads user profile
    LSUserValues(0);
    %%% To save typing
    Look=UserValues.Look;
    %%% Generates the Mia figure
    h.Mia = figure(...
        'Units','normalized',...
        'Tag','Mia',...
        'Name','MIA: Microtime image analysis',...
        'NumberTitle','off',...
        'Menu','none',...
        'defaultUicontrolFontName','Times',...
        'defaultAxesFontName','Times',...
        'defaultTextFontName','Times',...
        'Toolbar','figure',...
        'UserData',[],...
        'OuterPosition',[0.01 0.1 0.98 0.9],...
        'CloseRequestFcn',@Close_Mia,...
        'Visible','on');
    %h.Mia.Visible='off';
    h.Text=[];
    
    %%% Sets background of axes and other things
    whitebg(Look.Axes);
    %%% Changes Pam background; must be called after whitebg
    h.Mia.Color=Look.Back;
    
    %%% Menu to load mia data
    h.Mia_Load = uimenu(...
    'Parent',h.Mia,...
    'Label','Load...',...
    'Tag','Load_Mia');
    %%% Load TIFF
    h.Mia_Load_TIFF_Single = uimenu(...
    'Parent',h.Mia_Load,...
    'Label','...single color TIFFs',...
    'Callback',{@Mia_Load,1},...
    'Tag','Load_Mia_TIFF_SIngle');
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Main tab container %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    h.Mia_Main_Tabs = uitabgroup(...
        'Parent',h.Mia,...
        'Tag','Mia_Main_Tabs',...
        'Units','normalized',...
        'Position',[0 0 1 1]);    
    %% Image Tab
    h.Mia_Image_Tab = uitab(...
        'Parent',h.Mia_Main_Tabs,...
        'Title','Image',...
        'Tag','Mia_Main_Tabs',...
        'Units','normalized');   
    h.Mia_Image_Panel = uibuttongroup(...
        'Parent',h.Mia_Image_Tab,...
        'Tag','Mia_Main_Panel',...
        'Units','normalized',...
        'BackgroundColor', Look.Back,...
        'ForegroundColor', Look.Fore,...
        'HighlightColor', Look.Control,...
        'ShadowColor', Look.Shadow,...
        'Position',[0 0 0.8 1]);   
    for i=1:2
        %%% Text
        h.Text{end+1} = handle(uicontrol(...
            'Parent',h.Mia_Image_Panel,...
            'Style','text',...
            'Units','normalized',...
            'FontSize',14,...
            'FontWeight','Bold',...
            'HorizontalAlignment','left',...
            'BackgroundColor', Look.Back,...
            'ForegroundColor', Look.Fore,...
            'Position',[0.01 1.39-0.49*i, 0.11 0.03],...
            'String',['Channel ' num2str(i)]));
        %%% Colormap selection for images
        h.Mia_Image_Colormap(i) = uicontrol(...
            'Parent',h.Mia_Image_Panel,...
            'Style','popupmenu',...
            'Units','normalized',...
            'FontSize',12,...
            'UserData',[mod(i-1,2) mod(i,2) 0],...
            'Callback',{@Update_Plots,1,i},...
            'ButtonDownFcn',{@Mia_Color,i},...
            'BackgroundColor', Look.Control,...
            'ForegroundColor', Look.Fore,...
            'Position',[0.12 1.39-0.49*i, 0.08 0.03],...
            'String',{'Gray','Jet','Hot','HSV','Custom'});
        %%% Text
        h.Text{end+1} = uicontrol(...
            'Parent',h.Mia_Image_Panel,...
            'Style','text',...
            'Units','normalized',...
            'FontSize',14,...
            'HorizontalAlignment','left',...
            'BackgroundColor', Look.Back,...
            'ForegroundColor', Look.Fore,...
            'Position',[0.01 1.34-0.49*i, 0.11 0.03],...
            'String','PIE channel:');
        %%% Colormap selection for images
        h.Mia_PIE(i) = uicontrol(...
            'Parent',h.Mia_Image_Panel,...
            'Style','popupmenu',...
            'Units','normalized',...
            'FontSize',12,...
            'BackgroundColor', Look.Control,...
            'ForegroundColor', Look.Fore,...
            'Value',min([i,numel(UserValues.PIE.Name)]),...
            'Position',[0.12 1.34-0.49*i, 0.08 0.03],...
            'String',UserValues.PIE.Name);
        %%% Text
        h.Text{end+1} = uicontrol(...
            'Parent',h.Mia_Image_Panel,...
            'Style','text',...
            'Units','normalized',...
            'FontSize',14,...
            'HorizontalAlignment','left',...
            'BackgroundColor', Look.Back,...
            'ForegroundColor', Look.Fore,...
            'Position',[0.01 1.3-0.49*i, 0.05 0.03],...
            'String','Frame:');
        %%% Editbox for frame
        h.Mia_Frame(i) = uicontrol(...
            'Parent',h.Mia_Image_Panel,...
            'Style','edit',...
            'Units','normalized',...
            'FontSize',12,...
            'BackgroundColor', Look.Control,...
            'ForegroundColor', Look.Fore,...
            'Callback',{@Mia_Frame,1,i},...
            'Position',[0.065 1.3-0.49*i, 0.04 0.03],...
            'String','1');
        %%% Slider for frame
        h.Mia_Frame_Slider(i) = uicontrol(...
            'Parent',h.Mia_Image_Panel,...
            'Style','slider',...
            'Units','normalized',...
            'FontSize',12,...
            'BackgroundColor', Look.Control,...
            'ForegroundColor', Look.Fore,...
            'Callback',{@Mia_Frame,2,i},...
            'Position',[0.11 1.3-0.49*i, 0.09 0.03]);
        h.Mia_Frame_Listener(i)=addlistener(h.Mia_Frame_Slider(i),'Value','PostSet',@Mia_Frame);
        %%% Text
        h.Text{end+1} = uicontrol(...
            'Parent',h.Mia_Image_Panel,...
            'Style','text',...
            'Units','normalized',...
            'FontSize',14,...
            'HorizontalAlignment','left',...
            'BackgroundColor', Look.Back,...
            'ForegroundColor', Look.Fore,...
            'Position',[0.01 1.26-0.49*i, 0.11 0.03],...
            'String','Second plot:');
        %%% Popupmenu to select what to plot in second plot
        h.Mia_Second(i) = uicontrol(...
            'Parent',h.Mia_Image_Panel,...
            'Style','popupmenu',...
            'Units','normalized',...
            'FontSize',12,...
            'BackgroundColor', Look.Control,...
            'ForegroundColor', Look.Fore,...
            'Position',[0.12 1.26-0.49*i, 0.08 0.03],...
            'Callback',{@Update_Plots,1,i},...
            'Value',2,...
            'String',{'Original','Dynamic','Static'});
        
        
        %%% Axes to display images
        h.Mia_Image_Axes(i,1)= axes(...
            'Parent',h.Mia_Image_Panel,...
            'Units','normalized',...
            'Position',[0.28 0.99-0.49*i 0.35 0.48]);
        h.Mia_Image_Axes(i,2)= axes(...
            'Parent',h.Mia_Image_Panel,...
            'Units','normalized',...
            'Position',[0.64 0.99-0.49*i 0.35 0.48]);

        %%% Initializes empty plots
        h.Plots.Image(i,1)=image(zeros(1,1,3),...
            'Parent',h.Mia_Image_Axes(i,1),...
            'ButtonDownFcn',{@Mia_ROI,2});
        h.Mia_Image_Axes(i,1).DataAspectRatio=[1 1 1];
        h.Mia_Image_Axes(i,1).XTick=[];
        h.Mia_Image_Axes(i,1).YTick=[];
        h.Plots.Image(i,2)=image(zeros(1,1,3),...
            'Parent',h.Mia_Image_Axes(i,2));
        h.Mia_Image_Axes(i,2).DataAspectRatio=[1 1 1];
        h.Mia_Image_Axes(i,2).XTick=[];
        h.Mia_Image_Axes(i,2).YTick=[];
        %%% Initializes a rectangle ROI
        h.Plots.ROI(i)=rectangle(...
            'Parent',h.Mia_Image_Axes(i,1),...
            'Position',[0.5 0.5 1 1],...
            'EdgeColor',[1 1 1],...
            'HitTest','off');
        
        
    end         
        %% Settings Tab container
    h.Mia_Settings_Panel = uibuttongroup(...
        'Parent',h.Mia_Image_Tab,...
        'Tag','Mia_Settings_Panel',...
        'Units','normalized',...
        'BackgroundColor', Look.Back,...
        'ForegroundColor', Look.Fore,...
        'HighlightColor', Look.Control,...
        'ShadowColor', Look.Shadow,...
        'Position',[0.8 0.5 0.2 0.5]);
    h.Mia_Settings_Tabs = uitabgroup(...
        'Parent',h.Mia_Settings_Panel,...
        'Tag','Mia_Settings_Tabs',...
        'Units','normalized',...
        'Position',[0 0 1 1]);
            %% Mia image settings tab
        %%% Tab and panel for Mia image settings UIs
        h.Mia_Image_Settings_Tab= uitab(...
        'Parent',h.Mia_Settings_Tabs,...
        'Tag','MI_Image_Tab',...
        'Title','Image');
        h.Mia_Image_Settings_Panel = uibuttongroup(...
        'Parent',h.Mia_Image_Settings_Tab,...
        'Tag','Mia_Image_Settings_Panel',...
        'Units','normalized',...
        'BackgroundColor', Look.Back,...
        'ForegroundColor', Look.Fore,...
        'HighlightColor', Look.Control,...
        'ShadowColor', Look.Shadow,...
        'Position',[0 0 1 1]);
            %% Mia ROI setting tab
        %%% Tab and panel for Mia ROI settings UIs
        h.Mia_ROI_Settings_Tab= uitab(...
            'Parent',h.Mia_Settings_Tabs,...
            'Tag','MI_ROI_Settings_Tab',...
            'Title','ROI');
        h.Mia_ROI_Settings_Panel = uibuttongroup(...
            'Parent',h.Mia_ROI_Settings_Tab,...
            'Tag','Mia_ROI_Settings_Panel',...
            'Units','normalized',...
            'BackgroundColor', Look.Back,...
            'ForegroundColor', Look.Fore,...
            'HighlightColor', Look.Control,...
            'ShadowColor', Look.Shadow,...
            'Position',[0 0 1 1]);
        %%% Text
        h.Text{end+1} = uicontrol(...
            'Parent',h.Mia_ROI_Settings_Panel,...
            'Style','text',...
            'Units','normalized',...
            'FontSize',14,...
            'HorizontalAlignment','left',...
            'BackgroundColor', Look.Back,...
            'ForegroundColor', Look.Fore,...
            'Position',[0.02 0.92, 0.35 0.06],...
            'String','ROI size:');
        %%% Popupmenu to select what to subtract
        h.Mia_ROI_SizeX = uicontrol(...
            'Parent',h.Mia_ROI_Settings_Panel,...
            'Style','edit',...
            'Units','normalized',...
            'FontSize',12,...
            'BackgroundColor', Look.Control,...
            'ForegroundColor', Look.Fore,...
            'Position',[0.35 0.92, 0.25 0.06],...
            'Callback',{@Mia_ROI,1},...
            'String','200');
        %%% Popupmenu to select what to subtract
        h.Mia_ROI_SizeY = uicontrol(...
            'Parent',h.Mia_ROI_Settings_Panel,...
            'Style','edit',...
            'Units','normalized',...
            'FontSize',12,...
            'BackgroundColor', Look.Control,...
            'ForegroundColor', Look.Fore,...
            'Position',[0.62 0.92, 0.25 0.06],...
            'Callback',{@Mia_ROI,1},...
            'String','200');
        %%% Text
        h.Text{end+1} = uicontrol(...
            'Parent',h.Mia_ROI_Settings_Panel,...
            'Style','text',...
            'Units','normalized',...
            'FontSize',14,...
            'HorizontalAlignment','left',...
            'BackgroundColor', Look.Back,...
            'ForegroundColor', Look.Fore,...
            'Position',[0.02 0.84, 0.35 0.06],...
            'String','ROI pos:');
        %%% Popupmenu to select what to subtract
        h.Mia_ROI_PosX = uicontrol(...
            'Parent',h.Mia_ROI_Settings_Panel,...
            'Style','edit',...
            'Units','normalized',...
            'FontSize',12,...
            'BackgroundColor', Look.Control,...
            'ForegroundColor', Look.Fore,...
            'Position',[0.35 0.84, 0.25 0.06],...
            'Callback',{@Mia_ROI,1},...
            'String','0');
        %%% Popupmenu to select what to subtract
        h.Mia_ROI_PosY = uicontrol(...
            'Parent',h.Mia_ROI_Settings_Panel,...
            'Style','edit',...
            'Units','normalized',...
            'FontSize',12,...
            'BackgroundColor', Look.Control,...
            'ForegroundColor', Look.Fore,...
            'Position',[0.62 0.84, 0.25 0.06],...
            'Callback',{@Mia_ROI,1},...
            'String','0');
            %% Mia correction tab 
        %%% Tab and panel for Mia image correction settings UIs
        h.Mia_Correction_Settings_Tab= uitab(...
            'Parent',h.Mia_Settings_Tabs,...
            'Tag','MI_Correction_SettingsTab',...
            'Title','Correction');
        h.Mia_Correction_Settings_Panel = uibuttongroup(...
            'Parent',h.Mia_Correction_Settings_Tab,...
            'Tag','Mia_Correction_Settings_Panel',...
            'Units','normalized',...
            'BackgroundColor', Look.Back,...
            'ForegroundColor', Look.Fore,...
            'HighlightColor', Look.Control,...
            'ShadowColor', Look.Shadow,...
            'Position',[0 0 1 1]);    
        %%% Text
        h.Text{end+1} = uicontrol(...
            'Parent',h.Mia_Correction_Settings_Panel,...
            'Style','text',...
            'Units','normalized',...
            'FontSize',14,...
            'HorizontalAlignment','left',...
            'BackgroundColor', Look.Back,...
            'ForegroundColor', Look.Fore,...
            'Position',[0.02 0.92, 0.3 0.06],...
            'String','Subtract:');
        %%% Popupmenu to select what to subtract
        h.Mia_Subtract = uicontrol(...
            'Parent',h.Mia_Correction_Settings_Panel,...
            'Style','popupmenu',...
            'Units','normalized',...
            'FontSize',12,...
            'BackgroundColor', Look.Control,...
            'ForegroundColor', Look.Fore,...
            'Position',[0.34 0.92, 0.64 0.06],...
            'Callback',@Mia_Correct,...
            'String',{'Nothing','Frame mean','Pixel mean','Moving average'});
        %%% Text
        h.Mia_Subtract_Pixel_Text = uicontrol(...
            'Parent',h.Mia_Correction_Settings_Panel,...
            'Style','text',...
            'Units','normalized',...
            'FontSize',14,...
            'HorizontalAlignment','left',...
            'BackgroundColor', Look.Back,...
            'ForegroundColor', Look.Fore,...
            'Position',[0.02 0.84, 0.25 0.06],...
            'Visible','off',...
            'String','Pixel:');
        %%% Pixels to average for subtracting moving average
        h.Mia_Subtract_Pixel = uicontrol(...
            'Parent',h.Mia_Correction_Settings_Panel,...
            'Style','edit',...
            'Units','normalized',...
            'FontSize',12,...
            'BackgroundColor', Look.Control,...
            'ForegroundColor', Look.Fore,...
            'Position',[0.27 0.84, 0.15 0.06],...
            'Callback',@Mia_Correct,...
            'Visible','off',...
            'String',1);
        %%% Text
        h.Mia_Subtract_Frames_Text = uicontrol(...
            'Parent',h.Mia_Correction_Settings_Panel,...
            'Style','text',...
            'Units','normalized',...
            'FontSize',14,...
            'HorizontalAlignment','left',...
            'BackgroundColor', Look.Back,...
            'ForegroundColor', Look.Fore,...
            'Position',[0.52 0.84, 0.28 0.06],...
            'Visible','off',...
            'String','Frames:');
        %%% Pixels to average for subtracting moving average
        h.Mia_Subtract_Frames = uicontrol(...
            'Parent',h.Mia_Correction_Settings_Panel,...
            'Style','edit',...
            'Units','normalized',...
            'FontSize',12,...
            'BackgroundColor', Look.Control,...
            'ForegroundColor', Look.Fore,...
            'Position',[0.83 0.84, 0.15 0.06],...
            'Callback',@Mia_Correct,...
            'Visible','off',...
            'String',3);   
        %%% Text
        h.Text{end+1} = uicontrol(...
            'Parent',h.Mia_Correction_Settings_Panel,...
            'Style','text',...
            'Units','normalized',...
            'FontSize',14,...
            'HorizontalAlignment','left',...
            'BackgroundColor', Look.Back,...
            'ForegroundColor', Look.Fore,...
            'Position',[0.02 0.7, 0.3 0.06],...
            'String','Add:');
        %%% Popupmenu to select what to subtract
        h.Mia_Add = uicontrol(...
            'Parent',h.Mia_Correction_Settings_Panel,...
            'Style','popupmenu',...
            'Units','normalized',...
            'FontSize',12,...
            'BackgroundColor', Look.Control,...
            'ForegroundColor', Look.Fore,...
            'Position',[0.34 0.7, 0.64 0.06],...
            'Callback',@Mia_Correct,...
            'String',{'Nothing','Total mean','Frame mean','Pixel mean','Moving average'});
        %%% Text
        h.Mia_Add_Pixel_Text = uicontrol(...
            'Parent',h.Mia_Correction_Settings_Panel,...
            'Style','text',...
            'Units','normalized',...
            'FontSize',14,...
            'HorizontalAlignment','left',...
            'BackgroundColor', Look.Back,...
            'ForegroundColor', Look.Fore,...
            'Position',[0.02 0.62, 0.25 0.06],...
            'Visible','off',...
            'String','Pixel:');
        %%% Pixels to average for subtracting moving average
        h.Mia_Add_Pixel = uicontrol(...
            'Parent',h.Mia_Correction_Settings_Panel,...
            'Style','edit',...
            'Units','normalized',...
            'FontSize',12,...
            'BackgroundColor', Look.Control,...
            'ForegroundColor', Look.Fore,...
            'Position',[0.27 0.62, 0.15 0.06],...
            'Callback',@Mia_Correct,...
            'Visible','off',...
            'String',1);
        %%% Text
        h.Mia_Add_Frames_Text = uicontrol(...
            'Parent',h.Mia_Correction_Settings_Panel,...
            'Style','text',...
            'Units','normalized',...
            'FontSize',14,...
            'HorizontalAlignment','left',...
            'BackgroundColor', Look.Back,...
            'ForegroundColor', Look.Fore,...
            'Position',[0.52 0.62, 0.28 0.06],...
            'Visible','off',...
            'String','Frames:');
        %%% Pixels to average for subtracting moving average
        h.Mia_Add_Frames = uicontrol(...
            'Parent',h.Mia_Correction_Settings_Panel,...
            'Style','edit',...
            'Units','normalized',...
            'FontSize',12,...
            'BackgroundColor', Look.Control,...
            'ForegroundColor', Look.Fore,...
            'Position',[0.83 0.62, 0.15 0.06],...
            'Callback',@Mia_Correct,...
            'Visible','off',...
            'String',3);   
        %% Calculations tab container
        h.Mia_Calculations_Panel = uibuttongroup(...
            'Parent',h.Mia_Image_Tab,...
            'Tag','Mia_Calculations_Panel',...
            'Units','normalized',...
            'BackgroundColor', Look.Back,...
            'ForegroundColor', Look.Fore,...
            'HighlightColor', Look.Control,...
            'ShadowColor', Look.Shadow,...
            'Position',[0.8 0 0.2 0.5]);
        h.Mia_Calculations_Tabs = uitabgroup(...
            'Parent',h.Mia_Calculations_Panel,...
            'Tag','Mia_Calculations_Tabs',...
            'Units','normalized',...
            'Position',[0 0 1 1]);
            %% Perform correlation tab
        %%% Tab and panel for perform correlation UIs
        h.Mia_Calculations_Cor_Tab= uitab(...
            'Parent',h.Mia_Calculations_Tabs,...
            'Tag','MI_Image_Tab',...
            'Title','Correlate');
        h.Mia_Calculations_Cor_Panel = uibuttongroup(...
            'Parent',h.Mia_Calculations_Cor_Tab,...
            'Tag','Mia_Calculations_Cor_Panel',...
            'Units','normalized',...
            'BackgroundColor', Look.Back,...
            'ForegroundColor', Look.Fore,...
            'HighlightColor', Look.Control,...
            'ShadowColor', Look.Shadow,...
            'Position',[0 0 1 1]);
        h.Mia_Do_Correlation = uicontrol(...
            'Parent', h.Mia_Calculations_Cor_Panel,...
            'Style','push',...
            'Units','normalized',...
            'FontSize',12,...
            'BackgroundColor', Look.Control,...
            'ForegroundColor', Look.Fore,...
            'Position',[0.02 0.92, 0.96 0.06],...
            'Callback',@Do_2D_XCor,...
            'String','Correlate');
        h.Mia_Correlation_Type = uicontrol(...
            'Parent', h.Mia_Calculations_Cor_Panel,...
            'Style','popupmenu',...
            'Units','normalized',...
            'FontSize',12,...
            'BackgroundColor', Look.Control,...
            'ForegroundColor', Look.Fore,...
            'Position',[0.02 0.84, 0.3 0.06],...
            'String',{'ACF1','ACF2','CCF'});
        
    %% Correlation Tab
    h.Mia_Cor_Tab = uitab(...
        'Parent',h.Mia_Main_Tabs,...
        'Title','Correlation',...
        'Tag','Mia_Main_Tabs',...
        'Units','normalized');   
    h.Mia_Cor_Panel = uibuttongroup(...
        'Parent',h.Mia_Cor_Tab,...
        'Tag','Mia_Cor_Panel',...
        'Units','normalized',...
        'BackgroundColor', Look.Back,...
        'ForegroundColor', Look.Fore,...
        'HighlightColor', Look.Control,...
        'ShadowColor', Look.Shadow,...
        'Position',[0 0 1 1]);
    
    for i=1:3
        %%% Text
        h.Text{end+1} = uicontrol(...
            'Parent',h.Mia_Cor_Panel,...
            'Style','text',...
            'Units','normalized',...
            'FontSize',14,...
            'FontWeight','Bold',...
            'HorizontalAlignment','left',...
            'BackgroundColor', Look.Back,...
            'ForegroundColor', Look.Fore,...
            'Position',[0.01 1.28-0.33*i, 0.06 0.03]);
        switch i
            case 1
                h.Text{end}.String='ACF 1:';
            case 2
                h.Text{end}.String='CCF:';
            case 3
                h.Text{end}.String='ACF 2:';
        end
                
        %%% Colormap selection for correlations
        h.Cor_Colormap(i) = uicontrol(...
            'Parent',h.Mia_Cor_Panel,...
            'Style','popupmenu',...
            'Units','normalized',...
            'FontSize',12,...
            'UserData',[mod(i-1,2) mod(i,2) 0],...
            'Callback',{@Update_Plots,2,i},...
            'ButtonDownFcn',{@Mia_Color,i},...
            'BackgroundColor', Look.Control,...
            'ForegroundColor', Look.Fore,...
            'Value',2,...
            'Position',[0.1 1.28-0.33*i, 0.08 0.03],...
            'String',{'Gray','Jet','Hot','HSV','Custom'});
        
        %%% Text
        h.Text{end+1} = uicontrol(...
            'Parent',h.Mia_Cor_Panel,...
            'Style','text',...
            'Units','normalized',...
            'FontSize',14,...
            'HorizontalAlignment','left',...
            'BackgroundColor', Look.Back,...
            'ForegroundColor', Look.Fore,...
            'Position',[0.01 1.24-0.33*i, 0.045 0.03],...
            'String','Frame:');
        %%% Editbox for frame
        h.Mia_Cor_Frame(i) = uicontrol(...
            'Parent',h.Mia_Cor_Panel,...
            'Style','edit',...
            'Units','normalized',...
            'FontSize',12,...
            'BackgroundColor', Look.Control,...
            'ForegroundColor', Look.Fore,...
            'Callback',{@Mia_Frame,3,i},...
            'Position',[0.06 1.24-0.33*i, 0.03 0.03],...
            'String','1');
        %%% Slider for frame
        h.Mia_Cor_Frame_Slider(i) = uicontrol(...
            'Parent',h.Mia_Cor_Panel,...
            'Style','slider',...
            'Units','normalized',...
            'FontSize',12,...
            'BackgroundColor', Look.Control,...
            'ForegroundColor', Look.Fore,...
            'Callback',{@Mia_Frame,4,i},...
            'Position',[0.1 1.24-0.33*i, 0.08 0.03]);
        h.Mia_Cor_Frame_Listener(i)=addlistener(h.Mia_Cor_Frame_Slider(i),'Value','PostSet',@Mia_Frame);
        %%% Text
        h.Text{end+1} = uicontrol(...
            'Parent',h.Mia_Cor_Panel,...
            'Style','text',...
            'Units','normalized',...
            'FontSize',14,...
            'HorizontalAlignment','left',...
            'BackgroundColor', Look.Back,...
            'ForegroundColor', Look.Fore,...
            'Position',[0.01 1.2-0.33*i, 0.045 0.03],...
            'String','Size');
        %%% Editbox for frame
        h.Mia_Cor_Size(i) = uicontrol(...
            'Parent',h.Mia_Cor_Panel,...
            'Style','edit',...
            'Units','normalized',...
            'FontSize',12,...
            'BackgroundColor', Look.Control,...
            'ForegroundColor', Look.Fore,...
            'Callback',{@Update_Plots,2,i},...
            'Position',[0.06 1.2-0.33*i, 0.03 0.03],...
            'String','21');
        
        
        
        %%% Axes to display correlation images
        h.Mia_Cor_Axes(i,1)= axes(...
            'Parent',h.Mia_Cor_Panel,...
            'Units','normalized',...
            'Position',[0.2 1-0.33*i 0.22 0.32]);
        %%% Axes to display correlation surface
        h.Mia_Cor_Axes(i,2)= axes(...
            'Parent',h.Mia_Cor_Panel,...
            'Units','normalized',...
            'Position',[0.44 1-0.33*i 0.22 0.32]);
        
        %%% Initializes empty plots
        h.Plots.Cor(i,1)=image(zeros(1,1,3),...
            'Parent',h.Mia_Cor_Axes(i,1));
        h.Mia_Cor_Axes(i,1).DataAspectRatio=[1 1 1];
        h.Mia_Cor_Axes(i,1).XTick=[];
        h.Mia_Cor_Axes(i,1).YTick=[];
        h.Plots.Cor(i,2)=surf(zeros(2),zeros(2,2,3),...
            'Parent',h.Mia_Cor_Axes(i,2));
        h.Mia_Cor_Axes(i,2).XTick=[];
        h.Mia_Cor_Axes(i,2).YTick=[];
    end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%    

%% Initializes global variables %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
MIAData=[];
MIAData.Data=[];
guidata(h.Mia,h); 
else
     figure(h.Mia); % Gives focus to Pam figure 
end

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Functions that executes upon closing of mia window %%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
function Close_Mia(~,~)
clear global -regexp MIAData
Phasor=findobj('Tag','Phasor');
FCSFit=findobj('Tag','FCSFit');
Pam=findobj('Tag','Pam');
if isempty(Phasor) && isempty(FCSFit) && isempty(Pam)
    clear global -regexp UserValues
end
delete(gcf);



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Functions to load different data types %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
function Mia_Load(~,~,mode)
global MIAData UserValues
h = guidata(gcf);

switch mode
    case 1
    %% Loads single color TIFFs
    [FileName1,Path1] = uigetfile({'*.tif'}, 'Load TIFFs for channel 1', UserValues.File.PhasorPath, 'MultiSelect', 'on');
    if all(Path1==0)
        return
    else
        [FileName2,Path2] = uigetfile({'*.tif'}, 'Load TIFFs for channel 1', Path1, 'MultiSelect', 'on');
    end
    
    
    if ~iscell(FileName1)
        FileName1={FileName1};
    end
    if ~iscell(FileName2)
        FileName2={FileName2};
    end
    
    MIAData.Data=[];
    MIAData.Data{1,1}=int16.empty(0,0,0);
    for i=1:numel(FileName1)
        FileInfo=imfinfo(fullfile(Path1,FileName1{i}));
        for j=1:numel(FileInfo)
            MIAData.Data{1,1}(:,:,end+1)=int16(imread(fullfile(Path1,FileName1{i}),'TIFF','Index',j));
        end
    end
    h.Mia_Frame_Slider(1).SliderStep=[1./size(MIAData.Data{1,1},3),10/size(MIAData.Data{1,1},3)];
    h.Mia_Frame_Slider(1).Max=size(MIAData.Data{1,1},3);
    h.Mia_Frame_Slider(1).Value=1;
    h.Mia_Frame_Slider(1).Min=1;
    h.Mia_Frame(1).String='1';

    if all(Path2==0)
        Mia_ROI([],[],1)        
        return
    end
    
    MIAData.Data{2,1}=int16.empty(0,0,0);
    for i=1:numel(FileName2)
        FileInfo=imfinfo(fullfile(Path2,FileName2{i}));
        for j=1:numel(FileInfo)
            MIAData.Data{2,1}(:,:,end+1)=int16(imread(fullfile(Path2,FileName2{i}),'TIFF','Index',j));
        end
    end
    h.Mia_Frame_Slider(2).SliderStep=[1./size(MIAData.Data{2,1},3),10/size(MIAData.Data{2,1},3)];
    h.Mia_Frame_Slider(2).Max=size(MIAData.Data{2,1},3);
    h.Mia_Frame_Slider(2).Value=1;
    h.Mia_Frame_Slider(2).Min=1;
    h.Mia_Frame(2).String='1';
    h.Plots.ROI(2).Position=[10 10 200 200];
    Mia_ROI([],[],1) 
    
end







%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Updates mia plots %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
function Update_Plots(~,~,mode,channel)
h = guidata(gcf);
global MIAData UserValues

%% Plots intensity images
if any(mode==1)    
    for i=channel
        %% Selects colormap
        switch h.Mia_Image_Colormap(i).Value
            case 1
                Colormap=gray(64);
                h.Mia_Image_Colormap(i).BackgroundColor=UserValues.Look.Control;
            case 2
                Colormap=jet(64);
                h.Mia_Image_Colormap(i).BackgroundColor=UserValues.Look.Control;
            case 3
                Colormap=hot(64);
                h.Mia_Image_Colormap(i).BackgroundColor=UserValues.Look.Control;
            case 4
                Colormap=hsv(64);
                h.Mia_Image_Colormap(i).BackgroundColor=UserValues.Look.Control;
            case 5
                Colormap=gray(64).*repmat(h.Mia_Image_Colormap(i).UserData,[64,1]);
                h.Mia_Image_Colormap(i).BackgroundColor=h.Mia_Image_Colormap(i).UserData;
        end
        
        %% Plots main image
        if size(MIAData.Data,1)>=1
            if size(MIAData.Data,1)>=i
                Frame=h.Mia_Frame_Slider(i).Value;
                Image=double(MIAData.Data{i,1}(:,:,Frame));
                Image=round(63*(Image-min(min(Image)))/(max(max(Image))-min(min(Image))))+1;
                Image=reshape(Colormap(Image,:),[size(Image,1),size(Image,2),3]);
                h.Plots.Image(i,1).CData=Image;
                h.Mia_Image_Axes(i,1).XLim=[0 size(Image,2)]+0.5;
                h.Mia_Image_Axes(i,1).YLim=[0 size(Image,1)]+0.5;
            end
        end
        
        %% Plots second image
        if size(MIAData.Data,2)>=2
            if size(MIAData.Data,1)>=i
                Frame=h.Mia_Frame_Slider(i).Value;
                From=h.Plots.ROI(i).Position(1:2)+0.5;
                To=From+h.Plots.ROI(i).Position(3:4)-1;
                switch h.Mia_Second(i).Value
                    case 1 %%% Uses ROI of original image
                        Image=double(MIAData.Data{i,1}(From(2):To(2),From(1):To(1),Frame));
                    case 2 %%% Uses ROI of corrected image (=> dynamic species)
                        Image=double(MIAData.Data{i,2}(:,:,Frame));
                    case 3 %%% Uses ROI of correctiond image (=> static species)
                        Image=double(MIAData.Data{i,1}(From(2):To(2),From(1):To(1),Frame)-MIAData.Data{i,2}(:,:,Frame));
                end
                Image=round(63*(Image-min(min(Image)))/(max(max(Image))-min(min(Image))))+1;
                Image(isnan(Image))=1;
                Image=reshape(Colormap(Image,:),[size(Image,1),size(Image,2),3]);
                h.Plots.Image(i,2).CData=Image;
                h.Mia_Image_Axes(i,2).XLim=[0 size(Image,2)]+0.5;
                h.Mia_Image_Axes(i,2).YLim=[0 size(Image,1)]+0.5;
            end
        end
    end
end

%% Plots correlations
if any(mode==2)
    for i=channel
        if i<=size(MIAData.Cor,2) && ~isempty(MIAData.Cor{i})
            %% Selects colormap
            switch h.Cor_Colormap(i).Value
                case 1
                    Colormap=gray(64);
                    h.Cor_Colormap(i).BackgroundColor=UserValues.Look.Control;
                case 2
                    Colormap=jet(64);
                    h.Cor_Colormap(i).BackgroundColor=UserValues.Look.Control;
                case 3
                    Colormap=hot(64);
                    h.Cor_Colormap(i).BackgroundColor=UserValues.Look.Control;
                case 4
                    Colormap=hsv(64);
                    h.Cor_Colormap(i).BackgroundColor=UserValues.Look.Control;
                case 5
                    Colormap=gray(64).*repmat(h.Cor_Colormap(i).UserData,[64,1]);
                    h.Cor_Colormap(i).BackgroundColor=h.Cor_Colormap(i).UserData;
            end
            
            %%% Plots correlation image
            Frame=h.Mia_Cor_Frame_Slider(i).Value;
            
            Size=str2double(h.Mia_Cor_Size(i).String);
            if Size>size(MIAData.Cor{i},1) || Size>size(MIAData.Cor{i},2)
                Size=min([size(MIAData.Cor{i},1),size(MIAData.Cor{i},2)]);
                h.Mia_Cor_Size(i).String=num2str(Size);
            end
            %%% Determines center of correlation
            X(1)=ceil(size(MIAData.Cor{i},1)/2-Size/2)+1;
            X(2)=ceil(size(MIAData.Cor{i},1)/2+Size/2);
            Y(1)=ceil(size(MIAData.Cor{i},2)/2-Size/2)+1;
            Y(2)=ceil(size(MIAData.Cor{i},2)/2+Size/2);
            %%% Plots average correlation, if frame 0 was selected
            if Frame==0
                Image=mean(double(MIAData.Cor{i}(X(1):X(2),Y(1):Y(2),:)),3);
                h.Plots.Cor(i,2).ZData=mean(double(MIAData.Cor{i}(X(1):X(2),Y(1):Y(2),:)),3);
            else
                Image=double(MIAData.Cor{i}(X(1):X(2),Y(1):Y(2),Frame));
                h.Plots.Cor(i,2).ZData=double(MIAData.Cor{i}(X(1):X(2),Y(1):Y(2),Frame));
            end
            Image=round(63*(Image-min(min(Image)))/(max(max(Image))-min(min(Image))))+1;
            Image=reshape(Colormap(Image,:),[size(Image,1),size(Image,2),3]);
            h.Plots.Cor(i,1).CData=Image;
            h.Mia_Cor_Axes(i,1).XLim=[0 size(Image,2)]+0.5;
            h.Mia_Cor_Axes(i,1).YLim=[0 size(Image,1)]+0.5;
            
            %%% Plots correlation surface
            h.Plots.Cor(i,2).CData=Image;

            h.Mia_Cor_Axes(i,2).XLim=[0 size(Image,2)]+0.5;
            h.Mia_Cor_Axes(i,2).YLim=[0 size(Image,1)]+0.5;
        end
    end
end





%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Moves through frames %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
function Mia_Frame(~,e,mode,channel)
global MIAData
h = guidata(gcf);

%%% Determins slider in case of listener callback
if nargin<4
    mode=e.AffectedObject.Callback{2};
    channel=e.AffectedObject.Callback{3};
end
%%% Updates UIs
switch mode
    case 1 %%% Image frames editbox changed
        Frame=str2double(h.Mia_Frame(channel).String);
        %%% Forces frame into bounds
        if Frame<1;
            Frame=1;
            h.Mia_Frame(channel).String='1';
        elseif Frame>size(MIAData.Data{channel,1},3)
            Frame=size(MIAData.Data{channel,1},3);
            h.Mia_Frame(channel).String=num2str(size(MIAData.Data{channel,1},3));
        elseif  mod(Frame,1)~=0
            Frame=round(Frame);
             h.Mia_Frame(channel).String=num2str(Frame);
        end
        h.Mia_Frame_Slider(channel).Value=Frame;
    case 2 %%% Image frames slider changed
        Frame=h.Mia_Frame_Slider(channel).Value;
        if mod(Frame,1)~=0
            Frame=round(Frame);
            h.Mia_Frame_Slider(channel).Value=Frame;
        end
        h.Mia_Frame(channel).String=num2str(Frame);        
    case 3 %%% Cor frames editbox changed
        Frame=str2double(h.Mia_Cor_Frame(channel).String);
        %%% Forces frame into bounds
        if Frame<1;
            Frame=1;
            h.Mia_Cor_Frame(channel).String='1';
        elseif Frame>size(MIAData.Cor{channel},3)
            Frame=size(MIAData.Cor{channel},3);
            h.Mia_Cor_Frame(channel).String=num2str(size(MIAData.Cor{channel},3));
        elseif  mod(Frame,1)~=0
            Frame=round(Frame);
            h.Mia_Cor_Frame(channel).String=num2str(Frame);
        end
        h.Mia_Cor_Frame_Slider(channel).Value=Frame;
    case 4 %%% Cor frames slider changed
        Frame=h.Mia_Cor_Frame_Slider(channel).Value;
        if mod(Frame,1)~=0
            Frame=round(Frame);
            h.Mia_Cor_Frame_Slider(channel).Value=Frame;
        end
        h.Mia_Cor_Frame(channel).String=num2str(Frame);   
end
%%% Updates plots
Update_Plots([],[],round(mode/2),channel);
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Changes custom plots color %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
function Mia_Color(Obj,~,mode)
Color=uisetcolor;
if numel(Color)
    Obj.UserData=Color;
end
Update_Plots([],[],1,mode);



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Generates corrected images %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
function Mia_Correct(~,~)
global MIAData
h = guidata(gcf);

%%% Extracts ROI position
From=h.Plots.ROI(1).Position(1:2)+0.5;
To=From+h.Plots.ROI(1).Position(3:4)-1;

h.Mia_Subtract_Pixel.Visible='off';
h.Mia_Subtract_Pixel_Text.Visible='off';
h.Mia_Subtract_Frames.Visible='off';
h.Mia_Subtract_Frames_Text.Visible='off';
h.Mia_Add_Pixel.Visible='off';
h.Mia_Add_Pixel_Text.Visible='off';
h.Mia_Add_Frames.Visible='off';
h.Mia_Add_Frames_Text.Visible='off';


for i=1:2
    if size(MIAData.Data,1)>=i  
        MIAData.Data{i,2}=[];
        %% Adds to image
        switch h.Mia_Add.Value
            case 1 %%% Do nothing
                MIAData.Data{i,2}=MIAData.Data{i,1}(From(2):To(2),From(1):To(1),:);
            case 2 %%% Frame ROI mean
                MIAData.Data{i,2}=MIAData.Data{i,1}(From(2):To(2),From(1):To(1),:)...
                                 +int16(mean(mean(mean(MIAData.Data{i,1}(From(2):To(2),From(1):To(1),:)))));
            case 3 %%% Frame ROI mean
                MIAData.Data{i,2}=MIAData.Data{i,1}(From(2):To(2),From(1):To(1),:)...
                                 +int16(repmat(mean(mean(MIAData.Data{i,1}(From(2):To(2),From(1):To(1),:))),[(To(2)-From(2)+1),(To(1)-From(1)+1),1]));
            case 4 %%% Pixel mean
                MIAData.Data{i,2}=MIAData.Data{i,1}(From(2):To(2),From(1):To(1),:)...
                                 +int16(repmat(mean(MIAData.Data{i,1}(From(2):To(2),From(1):To(1),:),3),[1,1,size(MIAData.Data{i,1},3)]));
            case 5 %%% Moving average
                h.Mia_Add_Pixel.Visible='on';
                h.Mia_Add_Pixel_Text.Visible='on';
                h.Mia_Add_Frames.Visible='on';
                h.Mia_Add_Frames_Text.Visible='on';                
                Box=[str2double(h.Mia_Add_Pixel.String), str2double(h.Mia_Add_Pixel.String), str2double(h.Mia_Add_Frames.String)];
                %%% Forces averaging sizes into bounds
                if any(Box<1) || any(Box>size(MIAData.Data{i,1}))
                    Box(Box<1)=1;
                    if Box(1)>size(MIAData.Data{i,1},1)
                        Box(1)=size(MIAData.Data{i,1},1);
                    end
                    if Box(2)>size(MIAData.Data{i,1},2)
                        Box(2)=size(MIAData.Data{i,1},2);
                    end
                    if Box(3)>size(MIAData.Data{i,1},3)
                        Box(3)=min(size(MIAData.Data{i,1},3));   
                    end 
                    h.Mia_Add_Pixel.String=num2str(Box(1));
                    h.Mia_Add_Frames.String=num2str(Box(3));
                end
                %%% Sums up all pixel for averaging
                %%% Uses bigger original image for averaging
                if     (From(2)-floor((Box(1)-1)/2))>=1 ...
                    && (From(1)-floor((Box(2)-1)/2))>=1 ...
                    && (To(2)+floor(Box(1)/2))<=size(MIAData.Data{i,1},1) ...
                    && (To(1)+floor(Box(2)/2))<=size(MIAData.Data{i,1},2)
                    data=MIAData.Data{i,1}(...
                        (From(2)-floor((Box(1)-1)/2)):(To(2)+floor(Box(1)/2)),...
                        (From(1)-floor((Box(2)-1)/2)):(To(1)+floor(Box(2)/2)),:);
                    if Box(3)>1
                       data(end,end,end+Box(3)-1)=0; 
                    end
                else 
                    %%% Fills additional position with zeros, if on border
                    %%% of original image                    
                    data=MIAData.Data{i,1}(From(2):To(2),From(1):To(1),:);
                    data(end+Box(1)-1,end+Box(2)-1,end+Box(3)-1)=0;
                    data=circshif(data,[floor((Box(1)-1)/2),floor((Box(2)-1)/2),0]);
                end
                Data=int16(zeros(size(data)));
                for j=1:Box(1)
                    for k=1:Box(2);
                        for l=1:Box(3);
                            Data=Data+circshift(data,[j-1,k-1,l-1]);
                        end
                    end
                end
                clear data;
                %%% Removes excess points
                Data=Data((Box(1):end),...
                          (Box(2):end),...
                          (1+floor((Box(3)-1)/2):(end-floor(Box(3)/2))));    
                MIAData.Data{i,2}=MIAData.Data{i,1}(From(2):To(2),From(1):To(1),:)+Data/(Box(1)*Box(2)*Box(3));  
        end
        %% Subtracts from image
        switch h.Mia_Subtract.Value
            case 1 %%% Do nothing
            case 2 %%% Frame ROI mean
                MIAData.Data{i,2}=MIAData.Data{i,2}...
                                 -int16(repmat(mean(mean(MIAData.Data{i,1}(From(2):To(2),From(1):To(1),:))),[(To(2)-From(2)+1),(To(1)-From(1)+1),1]));
            case 3 %%% Pixel mean
                MIAData.Data{i,2}=MIAData.Data{i,2}...
                                 -int16(repmat(mean(MIAData.Data{i,1}(From(2):To(2),From(1):To(1),:),3),[1,1,size(MIAData.Data{i,1},3)]));
            case 4 %%% Moving average
                h.Mia_Subtract_Pixel.Visible='on';
                h.Mia_Subtract_Pixel_Text.Visible='on';
                h.Mia_Subtract_Frames.Visible='on';
                h.Mia_Subtract_Frames_Text.Visible='on';
                Box=[str2double(h.Mia_Subtract_Pixel.String), str2double(h.Mia_Subtract_Pixel.String), str2double(h.Mia_Subtract_Frames.String)];
                %%% Forces averaging sizes into bounds
                if any(Box<1) || any(Box>size(MIAData.Data{i,1}))
                    Box(Box<1)=1;
                    if Box(1)>size(MIAData.Data{i,1},1)
                        Box(1)=size(MIAData.Data{i,1},1);
                    end
                    if Box(2)>size(MIAData.Data{i,1},2)
                        Box(2)=size(MIAData.Data{i,1},2);
                    end
                    if Box(3)>size(MIAData.Data{i,1},3)
                        Box(3)=min(size(MIAData.Data{i,1},3));   
                    end 
                    h.Mia_Subtract_Pixel.String=num2str(Box(1));
                    h.Mia_Subtract_Frames.String=num2str(Box(3));
                end
                %%% Sums up all pixel for averaging
                %%% Uses bigger original image for averaging
                if     (From(2)-floor((Box(1)-1)/2))>=1 ...
                    && (From(1)-floor((Box(2)-1)/2))>=1 ...
                    && (To(2)+floor(Box(1)/2))<=size(MIAData.Data{i,1},1) ...
                    && (To(1)+floor(Box(2)/2))<=size(MIAData.Data{i,1},2)
                    data=MIAData.Data{i,1}(...
                        (From(2)-floor((Box(1)-1)/2)):(To(2)+floor(Box(1)/2)),...
                        (From(1)-floor((Box(2)-1)/2)):(To(1)+floor(Box(2)/2)),:);
                    if Box(3)>1
                       data(end,end,end+Box(3)-1)=0; 
                    end
                else 
                    %%% Fills additional position with zeros, if on border
                    %%% of original image                    
                    data=MIAData.Data{i,1}(From(2):To(2),From(1):To(1),:);
                    data(end+Box(1)-1,end+Box(2)-1,end+Box(3)-1)=0;
                    data=circshif(data,[floor((Box(1)-1)/2),floor((Box(2)-1)/2),0]);
                end
                Data=int16(zeros(size(data)));
                for j=1:Box(1)
                    for k=1:Box(2);
                        for l=1:Box(3);
                            Data=Data+circshift(data,[j-1,k-1,l-1]);
                        end
                    end
                end
                clear data;
                %%% Removes excess points
                Data=Data((Box(1):end),...
                          (Box(2):end),...
                          (1+floor((Box(3)-1)/2):(end-floor(Box(3)/2))));    
                MIAData.Data{i,2}=MIAData.Data{i,2}-Data/(Box(1)*Box(2)*Box(3));              
        end
    end
end
Update_Plots([],[],1,1:size(MIAData.Data,1))
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Funtion to update ROI position and size %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
function Mia_ROI(~,e,mode)
global MIAData
h = guidata(gcf);

if ~isempty(MIAData.Data)
    switch mode
        case 1 %%% Editboxes were changed
            %%% Update Size
            Size=round([str2double(h.Mia_ROI_SizeX.String) str2double(h.Mia_ROI_SizeY.String)]);
            %%% Forces ROI size into bounds
            if Size(1)>size(MIAData.Data{1,1},1) || Size(1)<1
                Size(1)=size(MIAData.Data{1,1},1);
                h.Mia_ROI_SizeX.String=num2str(Size(1));
            end
            if Size(2)>size(MIAData.Data{1,1},2) || Size(2)<1
                Size(2)=size(MIAData.Data{1,1},2);
                h.Mia_ROI_SizeY.String=num2str(Size(2));
            end
            %%% Update Position
            Pos=round([str2double(h.Mia_ROI_PosX.String) str2double(h.Mia_ROI_PosY.String)]);
            %%% Forces ROI size into bounds
            Pos(Pos<1)=1;
            if (Pos(1)+Size(1)-1)>size(MIAData.Data{1,1},1)
                Pos(1)=(size(MIAData.Data{1,1},1)-Size(1)+1);
                h.Mia_ROI_PosX.String=num2str(Pos(1));
            end
            if (Pos(2)+Size(2)-1)>size(MIAData.Data{1,1},2)
                Pos(2)=(size(MIAData.Data{1,1},2)-Size(2)+1);
                h.Mia_ROI_PosY.String=num2str(Pos(2));
            end
        case 2 %%% Image was clicked
            Type=h.Mia.SelectionType;
            switch Type
                case 'normal' %%% Centers on point
                    %%% Update Size
                    Size=round([str2double(h.Mia_ROI_SizeX.String) str2double(h.Mia_ROI_SizeY.String)]);
                    %%% Forces ROI size into bounds
                    if Size(1)>size(MIAData.Data{1,1},1) || Size(1)<1
                        Size(1)=size(MIAData.Data{1,1},1);
                        h.Mia_ROI_SizeX.String=num2str(Size(1));
                    end
                    if Size(2)>size(MIAData.Data{1,1},2) || Size(2)<1
                        Size(2)=size(MIAData.Data{1,1},2);
                        h.Mia_ROI_SizeY.String=num2str(Size(2));
                    end
                    %%% Updates position
                    Pos=round(e.Source.Parent.CurrentPoint(1,1:2)-Size/2);
                    h.Mia_ROI_PosX.String=num2str(Pos(1));
                    h.Mia_ROI_PosY.String=num2str(Pos(2));                    
                    %%% Forces ROI size into bounds
                    Pos(Pos<1)=1;
                    if (Pos(1)+Size(1)-1)>size(MIAData.Data{1,1},1)
                        Pos(1)=(size(MIAData.Data{1,1},1)-Size(1)+1);
                        h.Mia_ROI_PosX.String=num2str(Pos(1));
                    end
                    if (Pos(2)+Size(2)-1)>size(MIAData.Data{1,1},2)
                        Pos(2)=(size(MIAData.Data{1,1},2)-Size(2)+1);
                        h.Mia_ROI_PosY.String=num2str(Pos(2));
                    end
                case 'alt' %%%
                    %%% Turns off ROI during selection
                    h.Plots.ROI(1).Visible='off';
                    h.Plots.ROI(2).Visible='off';
                    %%% Determins selected area via dinamic box
                    Start=e.Source.Parent.CurrentPoint(1,1:2);
                    rbbox;
                    Stop=e.Source.Parent.CurrentPoint(1,1:2);
                    %%% Forces edges into bounds
                    if Stop(1)<e.Source.Parent.XLim(1)
                        Stop(1)=e.Source.Parent.XLim(1);
                    end
                    if Stop(1)>e.Source.Parent.XLim(2)
                        Stop(1)=e.Source.Parent.XLim(2);
                    end
                    if Stop(2)<e.Source.Parent.YLim(1)
                        Stop(2)=e.Source.Parent.YLim(1);
                    end
                    if Stop(2)>e.Source.Parent.YLim(2)
                        Stop(2)=e.Source.Parent.YLim(2);
                    end
                    %%% Updates position and size
                    Pos=[round(min(Start(1),Stop(1))+0.5) round(min(Start(2),Stop(2))+0.5)];
                    Size=[round(abs(Start(1)-Stop(1))) round(abs(Start(2)-Stop(2)))];
                    Size(Size<1)=1;
                    h.Mia_ROI_PosX.String=num2str(Pos(1));
                    h.Mia_ROI_PosY.String=num2str(Pos(2));                    
                    h.Mia_ROI_SizeX.String=num2str(Size(1));
                    h.Mia_ROI_SizeY.String=num2str(Size(2));
                    %%% Turns ROIs back on
                    h.Plots.ROI(1).Visible='on';
                    h.Plots.ROI(2).Visible='on';
                    
                    
                    
            end
    end

    %%% Updates ROI rectangles
    for i=1:2
        h.Plots.ROI(i).Position=[Pos-0.5 Size];
    end
    %%% Updates images
    Mia_Correct;
    
end


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Funtion to calculate correlations %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
function Do_2D_XCor(~,~)
h = guidata(gcf);
global MIAData

%%% Determins, which correlations to perform
if h.Mia_Correlation_Type.Value==3
    Auto=1:2; Cross=1;
    channel=1:3;
else
    Auto=h.Mia_Correlation_Type.Value; Cross=0;
    channel=floor(Auto*1.5);
end

MIAData.Cor=[];
%%% Performs autocorrelation
for i=Auto
    MIAData.Cor{floor(i*1.5)}=zeros(size(MIAData.Data{1,2}));
    for j=1:size(MIAData.Data{1,2},3)
        Image=double(MIAData.Data{i,2}(:,:,j));
        MIAData.Cor{floor(i*1.5)}(:,:,j)=(fftshift(real(ifft2(fft2(Image).*conj(fft2(Image)))))/(mean2(Image)^2*size(Image,1)*size(Image,2))) - 1;
    end
    clear Image;
end
%%% Performs crosscorrelation
if Cross
    MIAData.Cor{2}=zeros(size(MIAData.Data{1,2}));
    for j=1:size(MIAData.Data{1,2},3)
        Image{1}=double(MIAData.Data{1,2}(:,:,j));
        Image{2}=double(MIAData.Data{2,2}(:,:,j));
        MIAData.Cor{2}(:,:,j)=(fftshift(real(ifft2(fft2(Image{1}).*conj(fft2(Image{2})))))/(mean2(Image{1})*mean2(Image{2})*size(Image{1},1)*size(Image{1},2))) - 1;
    end
    clear Image;
end


%%% Updates correlation frame slider
for i=channel
    h.Mia_Cor_Frame_Slider(i).Min=0;
    h.Mia_Cor_Frame_Slider(i).Max=size(MIAData.Cor{i},3);
    h.Mia_Cor_Frame_Slider(i).SliderStep=[1./(size(MIAData.Cor{i},3)+1),10/(size(MIAData.Cor{i},3)+1)];
    h.Mia_Cor_Frame_Slider(i).Value=0;
end

%%% Updates correlation plots
Update_Plots([],[],2,channel);





